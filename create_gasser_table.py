#!/usr/bin/env python3
from dotenv import load_dotenv
import os

load_dotenv();

PGHOST      = os.environ.get("PGHOST")
PGUSER      = os.environ.get("PGUSER")
PGPASSWORD  = os.environ.get("PGPASSWORD")
PGPORT      = os.environ.get("PGPORT")
PGDATABASE  = os.environ.get("PGDATABASE")




import sys
import psycopg2
from psycopg2 import sql

# Adjust these or use env vars like PGHOST/PGUSER/PGPASSWORD/PGPORT
DB_CONFIG = {
    "dbname": PGDATABASE,
    "user":   PGUSER,    
    "password": PGPASSWORD,
    "host": PGHOST,
    "port": PGPORT
}

#     id SERIAL PRIMARY KEY,

CREATE_TABLE_SQL = """
CREATE TABLE IF NOT EXISTS fuel_readings (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    odometer_file TEXT, 
    trip_value  INTEGER,
    total_mileage INTEGER,
    gaspump_file TEXT,
    dollars REAL,
    gallons REAL,
    mpg     REAL,
    lat     DOUBLE PRECISION,
    lng     DOUBLE PRECISION,
    location TEXT,
    price_per_gal REAL
);
"""

DROP_TABLE_SQL = "drop table fuel_readings" 

CHECK_TABLE_SQL = "select * from fuel_readings"

def main():
    try:
        conn = psycopg2.connect(**DB_CONFIG)
        conn.autocommit = True
    
        with conn, conn.cursor() as cur:
            cur.execute(DROP_TABLE_SQL)
            cur.execute(CREATE_TABLE_SQL)
            cur.execute(CHECK_TABLE_SQL)
        print("Table fuel_readings")
        
    except psycopg2.Error as e:
        print(f"PostgreSQL error: {e}")
        sys.exit(1)
    finally:
        try:
            conn.close()
        except Exception:
            pass

if __name__ == "__main__":
    main()
